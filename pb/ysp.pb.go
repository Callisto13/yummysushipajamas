// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ysp.proto

package ysp

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Req struct {
	N1                   int32    `protobuf:"varint,1,opt,name=N1,proto3" json:"N1,omitempty"`
	N2                   int32    `protobuf:"varint,2,opt,name=N2,proto3" json:"N2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Req) Reset()         { *m = Req{} }
func (m *Req) String() string { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()    {}
func (*Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_800794f62278d04f, []int{0}
}

func (m *Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Req.Unmarshal(m, b)
}
func (m *Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Req.Marshal(b, m, deterministic)
}
func (m *Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Req.Merge(m, src)
}
func (m *Req) XXX_Size() int {
	return xxx_messageInfo_Req.Size(m)
}
func (m *Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Req.DiscardUnknown(m)
}

var xxx_messageInfo_Req proto.InternalMessageInfo

func (m *Req) GetN1() int32 {
	if m != nil {
		return m.N1
	}
	return 0
}

func (m *Req) GetN2() int32 {
	if m != nil {
		return m.N2
	}
	return 0
}

type Resp struct {
	Result               int32    `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resp) Reset()         { *m = Resp{} }
func (m *Resp) String() string { return proto.CompactTextString(m) }
func (*Resp) ProtoMessage()    {}
func (*Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_800794f62278d04f, []int{1}
}

func (m *Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resp.Unmarshal(m, b)
}
func (m *Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resp.Marshal(b, m, deterministic)
}
func (m *Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resp.Merge(m, src)
}
func (m *Resp) XXX_Size() int {
	return xxx_messageInfo_Resp.Size(m)
}
func (m *Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_Resp proto.InternalMessageInfo

func (m *Resp) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Req)(nil), "ysp.Req")
	proto.RegisterType((*Resp)(nil), "ysp.Resp")
}

func init() { proto.RegisterFile("ysp.proto", fileDescriptor_800794f62278d04f) }

var fileDescriptor_800794f62278d04f = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xac, 0x2c, 0x2e, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xae, 0x2c, 0x2e, 0x50, 0x52, 0xe5, 0x62, 0x0e, 0x4a,
	0x2d, 0x14, 0xe2, 0xe3, 0x62, 0xf2, 0x33, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0xf2,
	0x33, 0x04, 0xf3, 0x8d, 0x24, 0x98, 0xa0, 0x7c, 0x23, 0x25, 0x39, 0x2e, 0x96, 0xa0, 0xd4, 0xe2,
	0x02, 0x21, 0x31, 0x2e, 0xb6, 0xa0, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0xa8, 0x5a, 0x28, 0xcf, 0xc8,
	0x9d, 0x8b, 0xd5, 0x29, 0xb1, 0x38, 0x33, 0x59, 0x48, 0x86, 0x8b, 0x39, 0xb8, 0x34, 0x57, 0x88,
	0x43, 0x0f, 0x64, 0x4f, 0x50, 0x6a, 0xa1, 0x14, 0x27, 0x94, 0x55, 0x5c, 0xa0, 0xc4, 0x20, 0xa4,
	0xc0, 0xc5, 0x1a, 0x50, 0x94, 0x99, 0x9b, 0x8a, 0x43, 0xde, 0x80, 0x31, 0x89, 0x0d, 0xec, 0x36,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x3d, 0x11, 0xaa, 0xa8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BasicClient is the client API for Basic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BasicClient interface {
	Sum(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error)
	Prime(ctx context.Context, in *Req, opts ...grpc.CallOption) (Basic_PrimeClient, error)
}

type basicClient struct {
	cc *grpc.ClientConn
}

func NewBasicClient(cc *grpc.ClientConn) BasicClient {
	return &basicClient{cc}
}

func (c *basicClient) Sum(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/ysp.Basic/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *basicClient) Prime(ctx context.Context, in *Req, opts ...grpc.CallOption) (Basic_PrimeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Basic_serviceDesc.Streams[0], "/ysp.Basic/Prime", opts...)
	if err != nil {
		return nil, err
	}
	x := &basicPrimeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Basic_PrimeClient interface {
	Recv() (*Resp, error)
	grpc.ClientStream
}

type basicPrimeClient struct {
	grpc.ClientStream
}

func (x *basicPrimeClient) Recv() (*Resp, error) {
	m := new(Resp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BasicServer is the server API for Basic service.
type BasicServer interface {
	Sum(context.Context, *Req) (*Resp, error)
	Prime(*Req, Basic_PrimeServer) error
}

// UnimplementedBasicServer can be embedded to have forward compatible implementations.
type UnimplementedBasicServer struct {
}

func (*UnimplementedBasicServer) Sum(ctx context.Context, req *Req) (*Resp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedBasicServer) Prime(req *Req, srv Basic_PrimeServer) error {
	return status.Errorf(codes.Unimplemented, "method Prime not implemented")
}

func RegisterBasicServer(s *grpc.Server, srv BasicServer) {
	s.RegisterService(&_Basic_serviceDesc, srv)
}

func _Basic_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasicServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ysp.Basic/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasicServer).Sum(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Basic_Prime_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Req)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BasicServer).Prime(m, &basicPrimeServer{stream})
}

type Basic_PrimeServer interface {
	Send(*Resp) error
	grpc.ServerStream
}

type basicPrimeServer struct {
	grpc.ServerStream
}

func (x *basicPrimeServer) Send(m *Resp) error {
	return x.ServerStream.SendMsg(m)
}

var _Basic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ysp.Basic",
	HandlerType: (*BasicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Basic_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Prime",
			Handler:       _Basic_Prime_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ysp.proto",
}
